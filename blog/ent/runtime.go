// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/ccsunnyfd/practice/blog/ent/article"
	"github.com/ccsunnyfd/practice/blog/ent/schema"
	"github.com/ccsunnyfd/practice/blog/ent/tag"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	articleMixin := schema.Article{}.Mixin()
	articleMixinFields0 := articleMixin[0].Fields()
	_ = articleMixinFields0
	articleMixinFields1 := articleMixin[1].Fields()
	_ = articleMixinFields1
	articleFields := schema.Article{}.Fields()
	_ = articleFields
	// articleDescCreateTime is the schema descriptor for create_time field.
	articleDescCreateTime := articleMixinFields0[0].Descriptor()
	// article.DefaultCreateTime holds the default value on creation for the create_time field.
	article.DefaultCreateTime = articleDescCreateTime.Default.(func() time.Time)
	// articleDescUpdateTime is the schema descriptor for update_time field.
	articleDescUpdateTime := articleMixinFields0[1].Descriptor()
	// article.DefaultUpdateTime holds the default value on creation for the update_time field.
	article.DefaultUpdateTime = articleDescUpdateTime.Default.(func() time.Time)
	// article.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	article.UpdateDefaultUpdateTime = articleDescUpdateTime.UpdateDefault.(func() time.Time)
	// articleDescIsDel is the schema descriptor for is_del field.
	articleDescIsDel := articleMixinFields1[3].Descriptor()
	// article.DefaultIsDel holds the default value on creation for the is_del field.
	article.DefaultIsDel = articleDescIsDel.Default.(bool)
	// articleDescDesc is the schema descriptor for desc field.
	articleDescDesc := articleFields[1].Descriptor()
	// article.DefaultDesc holds the default value on creation for the desc field.
	article.DefaultDesc = articleDescDesc.Default.(string)
	// articleDescContent is the schema descriptor for content field.
	articleDescContent := articleFields[2].Descriptor()
	// article.DefaultContent holds the default value on creation for the content field.
	article.DefaultContent = articleDescContent.Default.(string)
	// articleDescIsAvailable is the schema descriptor for is_available field.
	articleDescIsAvailable := articleFields[3].Descriptor()
	// article.DefaultIsAvailable holds the default value on creation for the is_available field.
	article.DefaultIsAvailable = articleDescIsAvailable.Default.(bool)
	tagMixin := schema.Tag{}.Mixin()
	tagMixinFields0 := tagMixin[0].Fields()
	_ = tagMixinFields0
	tagMixinFields1 := tagMixin[1].Fields()
	_ = tagMixinFields1
	tagFields := schema.Tag{}.Fields()
	_ = tagFields
	// tagDescCreateTime is the schema descriptor for create_time field.
	tagDescCreateTime := tagMixinFields0[0].Descriptor()
	// tag.DefaultCreateTime holds the default value on creation for the create_time field.
	tag.DefaultCreateTime = tagDescCreateTime.Default.(func() time.Time)
	// tagDescUpdateTime is the schema descriptor for update_time field.
	tagDescUpdateTime := tagMixinFields0[1].Descriptor()
	// tag.DefaultUpdateTime holds the default value on creation for the update_time field.
	tag.DefaultUpdateTime = tagDescUpdateTime.Default.(func() time.Time)
	// tag.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	tag.UpdateDefaultUpdateTime = tagDescUpdateTime.UpdateDefault.(func() time.Time)
	// tagDescIsDel is the schema descriptor for is_del field.
	tagDescIsDel := tagMixinFields1[3].Descriptor()
	// tag.DefaultIsDel holds the default value on creation for the is_del field.
	tag.DefaultIsDel = tagDescIsDel.Default.(bool)
	// tagDescIsAvailable is the schema descriptor for is_available field.
	tagDescIsAvailable := tagFields[1].Descriptor()
	// tag.DefaultIsAvailable holds the default value on creation for the is_available field.
	tag.DefaultIsAvailable = tagDescIsAvailable.Default.(bool)
}
