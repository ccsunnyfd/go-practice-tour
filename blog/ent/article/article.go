// Code generated by entc, DO NOT EDIT.

package article

import (
	"time"
)

const (
	// Label holds the string label denoting the article type in the database.
	Label = "article"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldModifiedBy holds the string denoting the modified_by field in the database.
	FieldModifiedBy = "modified_by"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldIsDel holds the string denoting the is_del field in the database.
	FieldIsDel = "is_del"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldIsAvailable holds the string denoting the is_available field in the database.
	FieldIsAvailable = "is_available"

	// EdgeTags holds the string denoting the tags edge name in mutations.
	EdgeTags = "tags"

	// Table holds the table name of the article in the database.
	Table = "articles"
	// TagsTable is the table the holds the tags relation/edge. The primary key declared below.
	TagsTable = "article_tags"
	// TagsInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	TagsInverseTable = "tags"
)

// Columns holds all SQL columns for article fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldCreatedBy,
	FieldModifiedBy,
	FieldDeletedAt,
	FieldIsDel,
	FieldTitle,
	FieldDesc,
	FieldContent,
	FieldIsAvailable,
}

var (
	// TagsPrimaryKey and TagsColumn2 are the table columns denoting the
	// primary key for the tags relation (M2M).
	TagsPrimaryKey = []string{"article_id", "tag_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultIsDel holds the default value on creation for the "is_del" field.
	DefaultIsDel bool
	// DefaultDesc holds the default value on creation for the "desc" field.
	DefaultDesc string
	// DefaultContent holds the default value on creation for the "content" field.
	DefaultContent string
	// DefaultIsAvailable holds the default value on creation for the "is_available" field.
	DefaultIsAvailable bool
)
